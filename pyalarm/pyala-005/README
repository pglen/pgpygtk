                                    README
                                    
  Welcome to PyAla. This utility imatates the 'at' subsystem in python. The
major difference is that PyAla has an eazy to use graphical user interface.

 The utility works very similar to the 'at' counterpart. The spool filenames
encode the date and time for the alarm, and the spool file itself contains
instructions what to execute. This assures, that the spool python daemon does 
not need to read files, so it consumes very little processiong power.

 The spool file state is encoded in the filename's first letter. 
 
    'a' stands for alarm phase      (Awaiting)
    'b' stands for triggerable      (Batched)
    'c' stands for triggered        (Clocked)
    'd' stands for finished         (Done)
    
 An example spool file name is: d201509151840, This decodes as:
 
            d                   - finished
            2015 / 09 / 15      - date
            18 : 40             - time
    
 PyAla attempts to be informative and gentle. The alarm pops up a window 
without taking a focus off of your current window. It can execute any system 
command, as the PyAla command line is equivalent to the bash command line. 

 For example, one can specify a command line 'espeak "Hello World"'. This 
will make the computer say those words at a specified time.

 PyAla can awaken the system from hybernation. Not all systems are capable of
hybernation and awakening. (Today (2015) -- most systems are.)
The RTC subdirectory contains utilites to test if your system has such 
capabilities. (readwake.py and wakemachine.py)

 Please see rtc/README for security implications and access control.
 
  A simpler way to elevate priviledges to access the RTC is to run pyala.py as
root. Pyala will drop back to user privileges, elevating it only when 
controling the RTC.

 To run pyala from a script without a pass, add the following line to the
file /etc/sudoers:

ALL     ALL=(root) NOPASSWD: /usr/local/bin/pyala.py

or whatever path you installed pyala.py

and then run "sudo pyala.py"



